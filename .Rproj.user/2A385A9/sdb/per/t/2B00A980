{
    "collab_server" : "",
    "contents" : "library(tidyverse)\nlibrary(reshape2)\n\nexperimentDir = \"code_cpp/experiment output\"\n#### LOAD EXPERIMENTS ####\n\n# Load all experiments\nexperimentNames = list.files(experimentDir, pattern = \"^experiment[0-9]*$\")\n\n# First experiment to determine style of problem\nexperimentData = read_delim(paste(experimentDir, \"/\", experimentNames[1], sep=\"\"), delim=\" \")\nexperimentDataLong = melt(experimentData, id=\"id\")\n\nfor (experimentName in experimentNames) {\n  tempData = read_delim(paste(experimentDir, \"/\", experimentName, sep=\"\"), delim=\" \")\n  experimentData = experimentData %>% bind_rows(tempData)\n  tempDataMelt = melt(tempData, id=\"id\")\n  experimentDataLong = experimentDataLong %>%\n    bind_rows(tempDataMelt)\n}\n\n#### TRANSFORM DATA ####\n# Create new variables\nexperimentData = experimentData %>% \n  mutate(runTimeDiff = runTimeBender - runTimeSaa,\n         TC = FSC + SSC) %>%\n  arrange(id)\n\n#### FIGURES ####\n# Run time differences\ncreate_figures = function(experimentData) {\n  p = ggplot(experimentData) + geom_histogram(aes(x=runTimeDiff)) + theme_bw() +\n    ggtitle(\"Histogram of the run-time difference between L-Shaped and SAA method\") +\n    xlab(\"Time (in ms)\") + ylab(\"Frequency\")\n  print(p)\n  \n  # Total cost as a function of cv\n  p = ggplot(filter(experimentData, id > 1 & id < 12)) + geom_line(aes(x=cv, y=TC)) + \n    ggtitle(\"Total cost vs. overtime cost\") + theme_bw() +\n    xlab(\"Overtime cost\") + ylab(\"Total cost\")\n  print(p)\n  \n  # Lambda value\n  p = ggplot(experimentData) + geom_line(aes(x=lambda, y=TC)) + theme_bw() +\n    ggtitle(\"Value of lambda vs. total cost\") +\n    xlab(\"Lambda\") + ylab(\"Total cost\") + coord_fixed()\n  print(p)\n  \n  # Variance for same problem\n  p = ggplot(filter(experimentData, id > 51)) + geom_histogram(aes(x=runTimeDiff)) + \n    theme_bw() + ggtitle(\"Histogram of the run-time difference between L-Shaped and SAA method (different seeds)\") +\n    xlab(\"Time (in ms)\") + ylab(\"Frequency\")\n  print(p)\n  \n  p = ggplot(filter(experimentData, id > 51)) + geom_histogram(aes(x=runTimeBender)) + \n    theme_bw() + ggtitle(\"Histogram of the run time of the L-Shaped method (different seeds)\") +\n    xlab(\"Time (in ms)\") + ylab(\"Frequency\")\n  print(p)\n  \n  p = ggplot(filter(experimentData, id > 51)) + geom_histogram(aes(x=runTimeSaa)) + \n    theme_bw() + ggtitle(\"Histogram of the run time of the SAA method (different seeds)\") +\n    xlab(\"Time (in ms)\") + ylab(\"Frequency\")\n  print(p)\n  \n  # eps1 and eps2 (NOTE: SAME SEED)\n  p = ggplot(filter(experimentData, id >= 32 & id <= 41)) + geom_line(aes(x=eps1, y=lambda)) +\n    theme_bw() + ggtitle(\"Lambda vs. eps1\") +\n    xlab(\"eps1\") + ylab(\"Lambda\")\n  print(p)\n  \n  p = ggplot(filter(experimentData, id >= 42 & id <= 51)) + geom_line(aes(x=eps2, y=lambda)) +\n    theme_bw() + ggtitle(\"Lambda vs. eps2\") +\n    xlab(\"eps2\") + ylab(\"Lambda\")\n  print(p)\n  \n  p = ggplot(filter(experimentData, id >= 32 & id <= 41)) + geom_line(aes(x=eps1, y=SSC)) +\n    theme_bw() + ggtitle(\"Second-stage cost vs. eps1\") +\n    xlab(\"eps1\") + ylab(\"Second-stage cost\")\n  print(p)\n  \n  p = ggplot(filter(experimentData, id >= 42 & id <= 51)) + geom_line(aes(x=eps2, y=SSC)) +\n    theme_bw() + ggtitle(\"Second-stage cost vs. eps2\") +\n    xlab(\"eps2\") + ylab(\"Second-stage cost\")\n  print(p)\n  \n  # STD DEV (multiple seeds and calculate optimality gap)\n  p = ggplot(filter(experimentData, id >= 12 & id <= 21)) + geom_line(aes(x=meanDuration, y=FSC)) +\n    geom_line(aes(x=meanDuration, y=SSC)) + theme_bw() + \n    ggtitle(\"Costs vs. Mean surgery duration parameter\") +\n    xlab(\"Mean surgery duration (in minutes)\") + ylab(\"Cost\")\n  print(p)\n  \n  p = ggplot(filter(experimentData, id >= 22 & id <= 31)) + geom_line(aes(x=stdDuration, y=FSC)) +\n    geom_line(aes(x=stdDuration, y=SSC)) + theme_bw() + \n    ggtitle(\"Costs vs. Std. surgery duration parameter\") +\n    xlab(\"Std. surgery duration (in minutes)\") + ylab(\"Cost\")\n  print(p)\n  \n  # Overtime\n}\n\n",
    "created" : 1524583544525.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2781205584",
    "id" : "2B00A980",
    "lastKnownWriteTime" : 1524652731,
    "last_content_update" : 1524652731843,
    "path" : "~/Documents/LPR/code/createResults.R",
    "project_path" : "createResults.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}